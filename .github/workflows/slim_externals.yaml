name: Build docker image with slim externals

on:
  schedule:
    - cron: "0 2 * * *"

  workflow_dispatch:

jobs:

  build_sl7_slim_externals:
    name: build_sl7
    runs-on: [self-hosted]
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/dune-daq/sl7-slim-externals
          tags: |
            type=raw,value=latest

      - name: prepare build dir
        id: prep_build_dir
        run: |
          build_dir="/home/dingpf/cvmfs_dunedaq"
          cd $build_dir
          refresh_date=$(date +%y-%m-%d)
          echo "FROM ghcr.io/dune-daq/sl7-spack:latest" > Dockerfile
          echo 'MAINTAINER Pengfei Ding "dingpf@fnal.gov"' >> Dockerfile
          echo "ENV REFRESHED_AT $refresh_date" >> Dockerfile
          echo "ADD spack-externals /cvmfs/dunedaq.opensciencegrid.org/spack-externals" >> Dockerfile
          echo "ADD pypi-repo /cvmfs/dunedaq.opensciencegrid.org/pypi-repo" >> Dockerfile
          echo "ADD tools /cvmfs/dunedaq.opensciencegrid.org/tools" >> Dockerfile
          echo "ADD setup_dunedaq.sh /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh" >> Dockerfile
          echo 'ENTRYPOINT ["/bin/bash"]' >> Dockerfile
          echo 'spack-externals/spack-0.17.1/opt/spack/gcc-8.2.0/llvm-13.0.0-wzgrwhg4yki6etmzoay4jnztda2dx5ed/' > .dockerignore
          echo 'spack-externals/spack-0.17.1/opt/spack/gcc-8.2.0/gcc-9.4.0-2cp2ups6vynmweqtjclm5l54zmqs56hg/' >> .dockerignore

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: /home/dingpf/cvmfs_dunedaq
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Clean up
        if: always()
        run: |

            rm -f /home/dingpf/cvmfs_dunedaq/Dockerfile
            rm -f /home/dingpf/cvmfs_dunedaq/.dockerignore
            docker image prune -f
            docker container prune -f
            docker network prune -f
            docker volume prune -f

  push_sl7_slim_externals_to_dockerhub:
    name: push_sl7_ext_dockerhub
    runs-on: ubuntu-latest
    needs: build_sl7_slim_externals
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push to dockerhub
        run: |
          docker pull ghcr.io/dune-daq/sl7-slim-externals:latest
          docker tag ghcr.io/dune-daq/sl7-slim-externals:latest dunedaq/sl7-slim-externals:latest
          docker push dunedaq/sl7-slim-externals:latest

  build_c8_slim_externals:
    name: build_c8
    runs-on: [self-hosted]
    needs: build_sl7_slim_externals
    permissions:
      packages: write
      contents: read
    steps:    
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/dune-daq/c8-slim-externals
          tags: |
            type=raw,value=latest

      - name: prepare build dir
        run: |
          build_dir="${{ github.workspace }}/docker-build"
          mkdir -p $build_dir
          cd $build_dir
          refresh_date=$(date +%y-%m-%d)
          echo "FROM ghcr.io/dune-daq/c8-spack:latest" > Dockerfile
          echo 'MAINTAINER Pengfei Ding "dingpf@fnal.gov"' >> Dockerfile
          echo "ENV REFRESHED_AT $refresh_date" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/sl7-slim-externals:latest /cvmfs/dunedaq.opensciencegrid.org/spack-externals /cvmfs/dunedaq.opensciencegrid.org/spack-externals" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/sl7-slim-externals:latest /cvmfs/dunedaq.opensciencegrid.org/pypi-repo /cvmfs/dunedaq.opensciencegrid.org/pypi-repo" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/sl7-slim-externals:latest /cvmfs/dunedaq.opensciencegrid.org/tools /cvmfs/dunedaq.opensciencegrid.org/tools" >> Dockerfile
          echo "COPY --from=ghcr.io/dune-daq/sl7-slim-externals:latest /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh /cvmfs/dunedaq.opensciencegrid.org/setup_dunedaq.sh" >> Dockerfile
          echo 'ENTRYPOINT ["/bin/bash"]' >> Dockerfile

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: ${{ github.workspace }}/docker-build
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_c8_slim_externals_to_dockerhub:
    name: push_c8_ext_dockerhub
    runs-on: ubuntu-latest
    needs: build_c8_slim_externals
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push to dockerhub
        run: |
          docker pull ghcr.io/dune-daq/c8-slim-externals:latest
          docker tag ghcr.io/dune-daq/c8-slim-externals:latest dunedaq/c8-slim-externals:latest
          docker push dunedaq/c8-slim-externals:latest
